#+STARTUP: beamer
#+TITLE:     Pre-procesamiento de texto
#+AUTHOR:    \href{mailto:julio.waissman@unison.mx}{Julio Waissman}
#+DATE:      9 de marzo de 2018
#+BEAMER_HEADER: \subtitle{Curso de procesamiento de lenguaje natural}
#+BEAMER_HEADER: \institute[UNaM/MTI]{Maestría en Tecnologías de la Información\\Universidad Nacional de Misiones}
# #+BEAMER_HEADER: \titlegraphic{\includegraphics[height=1.5cm]{~/.emacs.d/julio/org/letragrama.png}}
#+BEAMER_HEADER: \titlegraphic{\includegraphics[width=0.8\textwidth]{imagenes/cabecera.png}}


#+DESCRIPTION: PLN para la MTI de la UNaM
#+LANGUAGE:  es

#+INCLUDE: "setup.org"

* Alguna definiciones                                               :B_frame:
  :PROPERTIES:
  :BEAMER_env: frame
  :END:

- Un documento es una cadena de caracteres
  + Un tweet
  + Un libro
  + Un correo electrónico\vfill
- Un /corpus/ es una colección de documentos (congruentes entre si) \vfill
- Los documentos pueden dividirse en párrafos, frases y/o palabras
  + Pueden estas anotados
  + Pueden estar asignados a una categoría\vfill
- Un vocabulario es un conjunto cerrado de palabras de dimensión \(V\)

* Procesamiento básico de la información                            :B_frame:
  :PROPERTIES:
  :BEAMER_env: frame
  :END:

1. Normalmente la información en forma de texto en lenguaje natural
   viene en formatos complicados y trae muchos /artefactos/ que
   influyen de manera muy importante en el resultado de una tarea de PLN. \vfill
2. Se requiere manejo de información en formatos =json= o =xml=, así
   como el manejo de bases de datos. \vfill
3. El acondicionamiento del texto es fundamental (capitalización,
   minúsculas, corrección, eliminación de argot ... \vfill

* Expresiones regulares                                             :B_frame:
  :PROPERTIES:
  :BEAMER_env: frame
  :END:

1. Las expresiones regulares (/regex/) juegan un rol /sorprendentemente/ importante en PLN \vfill
2. El primer paso en una tarea de PLN seguido implica el uso de /regex/ sofisticadas \vfill
3. Son difíciles de corregir \vfill
4. Si quieres practicar, puedes consultar [[https://www.datacamp.com/community/tutorials/python-regular-expression-tutorial?utm_source=adwords_ppc&utm_campaignid=1455363063&utm_adgroupid=65083631748&utm_device=c&utm_keyword=&utm_matchtype=b&utm_network=g&utm_adpostion=1t1&utm_creative=278443377092&utm_targetid=aud-390929969673:dsa-473406579035&utm_loc_interest_ms=&utm_loc_physical_ms=1010043&gclid=CjwKCAjw14rbBRB3EiwAKeoG_0SPfQcti4l3OBd-wnJ3b8Y9Mj3I1KOR5X8QJbMNYvWJvkh0AxLiqhoCmmYQAvD_BwE][este tutorial de /regex/ en /python/]] \vfill

* Algunas expresiones regulares                                     :B_frame:
  :PROPERTIES:
  :BEAMER_env: frame
  :END:

#+BEGIN_CENTER
\small{Disyunciones}
#+END_CENTER
  #+ATTR_LATEX: :float t
  #+ATTR_LaTeX: :width .65\textwidth
  [[./imagenes/regex_1.png]]

#+BEGIN_CENTER
\small{Rangos}
#+END_CENTER
  #+ATTR_LATEX: :float t
  #+ATTR_LaTeX: :width .75\textwidth
  [[./imagenes/regex_2.png]]

* Algunas expresiones regulares                                     :B_frame:
  :PROPERTIES:
  :BEAMER_env: frame
  :END:

#+BEGIN_CENTER
\small{Negaciones}
#+END_CENTER
  #+ATTR_LATEX: :float t
  #+ATTR_LaTeX: :width .75\textwidth
  [[./imagenes/regex_3.png]]

#+BEGIN_CENTER
\small{Disyunciones con |}
#+END_CENTER
  #+ATTR_LATEX: :float t
  #+ATTR_LaTeX: :width .50\textwidth
  [[./imagenes/regex_5.png]]

* Algunas expresiones regulares                                     :B_frame:
  :PROPERTIES:
  :BEAMER_env: frame
  :END:

#+BEGIN_CENTER
\small{* + ? .}
#+END_CENTER
  #+ATTR_LATEX: :float t
  #+ATTR_LaTeX: :width .55\textwidth
  [[./imagenes/regex_4.png]]

#+BEGIN_CENTER
\small{Inicio y fin de cadena}
#+END_CENTER
  #+ATTR_LATEX: :float t
  #+ATTR_LaTeX: :width .50\textwidth
  [[./imagenes/regex_6.png]]

* Vamos a la libreta                                                :B_frame:
  :PROPERTIES:
  :BEAMER_env: frame
  :END:
  #+ATTR_LATEX: :float t
  #+ATTR_LaTeX: :width .35\textwidth
  [[./imagenes/jupyter.png]]
#+BEGIN_CENTER
Veamos unos ejemplo no tan triviales
#+END_CENTER

* ¿Que es una palabra?                                              :B_frame:
  :PROPERTIES:
  :BEAMER_env: frame
  :END:
- Una secuencia de caracteres con significado \vfill
- En español, la puntuación y los caracteres sirven para separar palabras. \vfill
- ¿Y los neologismos, los /hashtags/, las direcciones url, las fechas,...? \vfill
- ¿La puntuación debe de integrarse en la palabra? \vfill

  #+ATTR_LATEX: :float t
  #+ATTR_LaTeX: :width .90\textwidth
  [[./imagenes/tok_jap.png]]

* Token y tokenización                                              :B_frame:
  :PROPERTIES:
  :BEAMER_env: frame
  :END:
** Token                                                            :B_block:
   :PROPERTIES:
   :BEAMER_env: block
   :END:
   Unidad útil de caracteres para el procesamiento semántico. Puede
   ser palabras, frases, simbolos, etc. \vfill

** Tokenización                                                     :B_block:
   :PROPERTIES:
   :BEAMER_env: block
   :END:
   Proceso de separar un documento en tokens.

1. El método más popular en inglés es el [[ftp://ftp.cis.upenn.edu/pub/treebank/public_html/tokenization.html][Treebank tokenization]]

2. En español el proceso de tokenización es relativamente simple, si
   no se trata con documentos especializados

3. En idiomas como aleman, turco, japones o chino, la tokenización es un problema difícil \vfill

* Veamos unos ejemplos
  :PROPERTIES:
  :BEAMER_env: frame
  :END:
  #+ATTR_LATEX: :float t
  #+ATTR_LaTeX: :width .35\textwidth
  [[./imagenes/jupyter.png]]
#+BEGIN_CENTER
Regresamos a la libreta
#+END_CENTER

* Normalización de /tokens/                                         :B_frame:
  :PROPERTIES:
  :BEAMER_env: frame
  :END:
- Algunos métodos basados en reglas para normalizar tokens con mismo significado
  + Minúsculas en todas las palabras
  + Manejo de acrónimos (EUA, E.U.A., US, U.S., USA, U.S.A.)
  + Requiere de desarrollar muchas reglas particulares \vfill

- Encontrar el mismo token para diferentes formas con el mismo
  significado semántico (niños, niño, niña, niñas, ...)
  + Basado en análisis morfológico (lematización)
  + Basado en reglas heurísticas (/stemming/) \vfill

* Stemming                                                          :B_frame:
  :PROPERTIES:
  :BEAMER_env: frame
  :END:
- Proceso de remover y remplazar sufijos de una palabra en varios
  pasos a fin de obtener la /raiz/ de la palabra (llamada tallo, o /stem/) \vfill
- Método heurístico para ir recortando las palabras \vfill
- Típicamente falla en formas irregulares \vfill
- El método más típico para inglés es el [[http://snowball.tartarus.org/algorithms/porter/stemmer.html][Porter's stemming algorithm]] \vfill
- El método más típico en español es el [[http://snowball.tartarus.org/algorithms/spanish/stemmer.html][Snowball spanish stemming algorithm]]

* Lematización                                                      :B_frame:
  :PROPERTIES:
  :BEAMER_env: frame
  :END:

- Se refiere al uso de un análisis lingüístico formal basado en un
  vocabulario cerrado y en reglas morfológicas.\vfill
- Difícil de hacer, requiere de mucho esfuerzo. \vfill
- Convierte el token a la forma base de la palabra, tal y como esté
  definido en un diccionario de referencia (lexema).\vfill
- Existen pocos lematizadores en español ([[http://nlp.lsi.upc.edu/freeling/index.php/node/1][freeling]], spacy).

  #+ATTR_LATEX: :float t
  #+ATTR_LaTeX: :width .35\textwidth
  [[./imagenes/fin.jpg]]
